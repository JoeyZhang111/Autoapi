{
  "uid" : "3107531ff22d2005",
  "name" : "msg_reply0001-回复留言_4001",
  "fullName" : "test_case.test_replay.TestAdd#test_login",
  "historyId" : "93877b46b7ce0a9de28c9c2e15d8af1a",
  "time" : {
    "start" : 1626766552862,
    "stop" : 1626766552972,
    "duration" : 110
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '添加失败' == '添加成功'\n  - 添加成功\n  + 添加失败",
  "statusTrace" : "self = <test_case.test_replay.TestAdd object at 0x000002F3A7B34448>\nid = 'msg_reply0001', name = '回复留言_4001', url = '/api/replay', method = 'POST'\nbody = '{\"replay\": \"回复的内容 \", \"messageId\": \"3420\"}'\nres = '{\"flag\":\"松勤教育\",\"code\":\"200\",\"message\":\"添加成功\",\"data\":{\"replayId\":\"34\"}}'\nget_token = None\n\n    @allure.severity(\"blocker\")\n    @allure.story(\"回复留言用例\")\n    @allure.title(\"{id}-{name}\")\n    @pytest.mark.parametrize(\"id,name,url,method,body,res\",testdata)\n    def test_login(self,id,name,url,method,body,res,get_token):\n        BaseApi.logger.info(\"执行用例{}{}\".format(id,name))\n        newurl = ini.get(\"url\",\"host\") + url\n        replay = Replay()\n        newbody = json.loads(body)\n        replay.send(url=newurl,method=method,json=newbody)\n    \n        try:\n            expect =  json.loads(res)\n>           assert replay.get_res(\"$.message\") == expect[\"message\"]\nE           AssertionError: assert '添加失败' == '添加成功'\nE             - 添加成功\nE             + 添加失败\n\ntest_case\\test_replay.py:42: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1626766552749,
      "stop" : 1626766552862,
      "duration" : 113
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "story",
    "value" : "回复留言用例"
  }, {
    "name" : "feature",
    "value" : "留言板块用例"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_replay"
  }, {
    "name" : "subSuite",
    "value" : "TestAdd"
  }, {
    "name" : "host",
    "value" : "DESKTOP-M7394K0"
  }, {
    "name" : "thread",
    "value" : "103944-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_replay"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "body",
    "value" : "'{\"replay\": \"回复的内容 \", \"messageId\": \"3420\"}'"
  }, {
    "name" : "id",
    "value" : "'msg_reply0001'"
  }, {
    "name" : "method",
    "value" : "'POST'"
  }, {
    "name" : "name",
    "value" : "'回复留言_4001'"
  }, {
    "name" : "res",
    "value" : "'{\"flag\":\"松勤教育\",\"code\":\"200\",\"message\":\"添加成功\",\"data\":{\"replayId\":\"34\"}}'"
  }, {
    "name" : "url",
    "value" : "'/api/replay'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3107531ff22d2005.json",
  "parameterValues" : [ "'{\"replay\": \"回复的内容 \", \"messageId\": \"3420\"}'", "'msg_reply0001'", "'POST'", "'回复留言_4001'", "'{\"flag\":\"松勤教育\",\"code\":\"200\",\"message\":\"添加成功\",\"data\":{\"replayId\":\"34\"}}'", "'/api/replay'" ]
}