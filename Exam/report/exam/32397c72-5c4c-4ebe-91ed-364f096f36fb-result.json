{"name": "msg_list0003-列出留言_3002", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 14 (char 13)", "trace": "self = <test_case.test_list.TestAdd object at 0x000001FBF4992B88>\nid = 'msg_list0003', name = '列出留言_3002', url = '/api/messages/', method = 'GET'\nbody = '{\"page\":\"1“,\"value\":\"0\"}'\nres = '{\"flag\":\"松勤教育\",\"code\":\"200\",\"message\":\"查询所有留言\",\"data\":\"{}\"}'\nget_token = None\n\n    @allure.severity(\"blocker\")\n    @allure.story(\"回复留言用例\")\n    @allure.title(\"{id}-{name}\")\n    @pytest.mark.parametrize(\"id,name,url,method,body,res\",testdata)\n    def test_login(self,id,name,url,method,body,res,get_token):\n        BaseApi.logger.info(\"执行用例{}{}\".format(id,name))\n        relist = List()\n>       newbody = json.loads(body)\n\ntest_list.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python\\Python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nD:\\Python\\Python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001FBF2E7D3C8>\ns = '{\"page\":\"1“,\"value\":\"0\"}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 14 (char 13)\n\nD:\\Python\\Python37\\lib\\json\\decoder.py:353: JSONDecodeError"}, "parameters": [{"name": "id", "value": "'msg_list0003'"}, {"name": "name", "value": "'列出留言_3002'"}, {"name": "url", "value": "'/api/messages/'"}, {"name": "method", "value": "'GET'"}, {"name": "body", "value": "'{\"page\":\"1“,\"value\":\"0\"}'"}, {"name": "res", "value": "'{\"flag\":\"松勤教育\",\"code\":\"200\",\"message\":\"查询所有留言\",\"data\":\"{}\"}'"}], "start": 1626766238909, "stop": 1626766238909, "uuid": "55eb3d80-50c2-4d4b-9e20-76511443e1cb", "historyId": "b349bac64a91817544f1e68eacfc4ca2", "testCaseId": "37a3f9f68450ed4704d863dd5226aaee", "fullName": "test_case.test_list.TestAdd#test_login", "labels": [{"name": "story", "value": "回复留言用例"}, {"name": "feature", "value": "留言板块用例"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_list"}, {"name": "subSuite", "value": "TestAdd"}, {"name": "host", "value": "DESKTOP-M7394K0"}, {"name": "thread", "value": "168592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_list"}]}